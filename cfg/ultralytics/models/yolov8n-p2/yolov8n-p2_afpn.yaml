# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0-p2 head
head:
  - [[2, 4], 1, ASFF2, [128, 0]] # 10
  - [[2, 4], 1, ASFF2, [256, 1]] # 11

  - [-2, 1, C2f, [128, False]] # 12
  - [-2, 1, C2f, [256, False]] # 13

  - [[12, 13, 6], 1, ASFF3, [128, 0]] # 14
  - [[12, 13, 6], 1, ASFF3, [256, 1]] # 15
  - [[12, 13, 6], 1, ASFF3, [512, 2]] # 16

  - [-3, 1, C2f, [128, False]] # 17
  - [-3, 1, C2f, [256, False]] # 18
  - [-3, 1, C2f, [512, False]] # 19

  - [[17, 18, 19, 9], 1, ASFF4, [128, 0]] # 20
  - [[17, 18, 19, 9], 1, ASFF4, [256, 1]] # 21
  - [[17, 18, 19, 9], 1, ASFF4, [512, 2]] # 22
  - [[17, 18, 19, 9], 1, ASFF4, [1024, 3]] # 23

  - [20, 1, C2f, [128, False]]  # 24 (P2/4-xsmall)
  - [21, 1, C2f, [256, False]]  # 25 (P3/8-small)
  - [22, 1, C2f, [512, False]]  # 26 (P4/16-medium)
  - [23, 1, C2f, [1024, False]]  # 27 (P5/32-large)

  - [[24, 25, 26, 27], 1, Detect, [nc]]  # Detect(P2, P3, P4, P5)
