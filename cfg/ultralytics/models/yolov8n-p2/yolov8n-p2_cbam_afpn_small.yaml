# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P2-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, CBAM, [1024]]  # 9
  - [-1, 1, SPPF, [1024, 5]]  # 10

# YOLOv8.0-p2 head
head:
  - [2, 1, Conv, [64, 1, 1]] # 11 downsample backbone P2
  - [4, 1, Conv, [128, 1, 1]] # 12 downsample backbone P3

  - [[11, 12], 1, ASFF2, [64, 0]] # 13
  - [[11, 12], 1, ASFF2, [128, 1]] # 14

  - [-2, 1, C2f, [64, False]] # 15
  - [-2, 1, C2f, [128, False]] # 16

  - [6, 1, Conv, [256, 1, 1]] # 17 downsample backbone P4

  - [[15, 16, 17], 1, ASFF3, [64, 0]] # 18
  - [[15, 16, 17], 1, ASFF3, [128, 1]] # 19
  - [[15, 16, 17], 1, ASFF3, [256, 2]] # 20

  - [-3, 1, C2f, [64, False]] # 21
  - [-3, 1, C2f, [128, False]] # 22
  - [-3, 1, C2f, [256, False]] # 23

  - [10, 1, Conv, [512, 1, 1]] # 24 downsample backbone P5

  - [[21, 22, 23, 24], 1, ASFF4, [64, 0]] # 25
  - [[21, 22, 23, 24], 1, ASFF4, [128, 1]] # 26
  - [[21, 22, 23, 24], 1, ASFF4, [256, 2]] # 27
  - [[21, 22, 23, 24], 1, ASFF4, [512, 3]] # 28

  - [25, 1, C2f, [64, False]]  # 29 (P2/4-xsmall)
  - [26, 1, C2f, [128, False]]  # 30 (P3/8-small)
  - [27, 1, C2f, [256, False]]  # 31 (P4/16-medium)
  - [28, 1, C2f, [512, False]]  # 32 (P5/32-large)

  - [[29, 30, 31, 32], 1, Detect, [nc]]  # Detect(P2, P3, P4, P5)
